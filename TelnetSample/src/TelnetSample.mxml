<?xml version="1.0" encoding="utf-8"?><s:Application xmlns:fx="http://ns.adobe.com/mxml/2009" 			   xmlns:s="library://ns.adobe.com/flex/spark" 			   xmlns:mx="library://ns.adobe.com/flex/mx"			   creationComplete="onComplete(event)" removedFromStage="onUnload(event)"			   currentState="login"			   minWidth="955" minHeight="600" xmlns:view="com.view.*">		<fx:Script>		<![CDATA[			import com.data.SmallClass;			import com.events.AdminEvents;			import com.events.UserEvents;			import com.telnet.Telnet;						import mx.collections.ArrayCollection;			import mx.events.FlexEvent;						[Bindable] private var telnetClient:Telnet;			[Bindable] private var sharedClass:SmallClass;			[Bindable] private var memoryUsage:ArrayCollection;						protected function onComplete(event:FlexEvent):void			{				// Load policy file from remote server.				Security.allowDomain("*");				Security.loadPolicyFile("hostname.com/crossdomain.xml");				currentState = "admin";//				if( Number(port.text) == 3333 ) currentState = "admin";//				telnetClient = new Telnet( this.host.text, int(this.port.text) );			}						private function onUnload( event:Event ):void			{				onStop();			}							protected function onConnect(event:MouseEvent = null):void			{				telnetClient = new Telnet( this.host.text, int(this.port.text), botBar.username );				telnetClient.addEventListener( AdminEvents.STATS_RECEIVED, onStatsRec );				telnetClient.addEventListener( UserEvents.USER_LOGGEDIN, onUserJoin );				telnetClient.addEventListener( UserEvents.USER_LOGGEDOUT, onUserLeave );				currentState = "chat";			}						protected function onStatsRec( event:AdminEvents ):void			{				var stats:Object = {memory: event.stats.totalMemory, time: event.stats.serverUptime};				middle.memoryUsage.addItem( stats );			}						protected function onUserJoin( event:UserEvents ):void			{								var user:Object = {username: event.user.username, id: event.user.id };//				middle.users.addItem( user );			}						protected function onUserLeave( event:UserEvents ):void			{								var user:Object = {username: event.user.username, id: event.user.id };//				middle.removeUser( user.id );			}						protected function onSend(event:MouseEvent = null):void			{				if( botBar.username != "" ){					telnetClient.writeStringToSocket( botBar.username+": "+botBar.cmd.text );					botBar.cmd.text = "";				}			}			protected function onStop(event:MouseEvent = null):void			{				telnetClient.writeStringToSocket( botBar.username+" has left");				telnetClient.stop();			}////			protected function sendObject(event:Event):void//			{//				var ba:ByteArray = new ByteArray();//				ba.writeObject( sharedClass );//				telnetClient.writeBytesToSocket( ba );//			}						public function hexString( bytes:ByteArray ):String			{				var str:String = "0x";				return str;			}					]]>	</fx:Script>		<fx:Declarations>		<!-- Place non-visual elements (e.g., services, value objects) here -->	</fx:Declarations>	<s:states>		<s:State name="login"/>		<s:State name="chat"/>		<s:State name="admin"/>	</s:states>	<s:VGroup width="100%" height="100%" paddingTop="15" paddingBottom="15" paddingLeft="15" paddingRight="15">		<s:HGroup width="100%" verticalAlign="middle" 				  paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5">			<s:Label text="Server:"/>			<s:Label id="host" text="10.32.138.219"/> <!--text="50.16.255.33" editable="true"-->						 			<s:Label text="Port:"/>			<s:Label id="port" text="9980"/><!--9980-->			<s:Label text="{botBar.username}"/>			<!--			<s:Button label="fart">				<s:click>					<![CDATA[						var stc:StatsClass = new StatsClass();						var ba:ByteArray = new ByteArray();						var ba2:ByteArray = new ByteArray();						stc.totalMemory = 1;						stc.peakMemory = 254654645546546546546456546;						ba.writeObject( stc );						ba2.writeObject( { totalMemory: 1, peakMemory: 254654645546546546546456546 } ); 						var str:String = "";						var str2:String = "";						ba.position = 0;						ba2.position = 0;						for( var i:int = 0; i < ba.length; i++ ){							str += String.fromCharCode( ba.readByte() );						}						for( i = 0; i < ba2.length; i++ ){							str2 += String.fromCharCode( ba2.readByte() );						}						trace( 'AMF Encoding Typed: '+str );						trace( 'AMF Encoding: '+str2 );										]]>				</s:click>			</s:Button>			-->		</s:HGroup>		<view:MiddleGroup id="middle" width="100%" height="100%" message="{telnetClient.message}"/>		<view:BottomBar id="botBar" width="100%" verticalAlign="middle"						loginEvent="onConnect()" sendEvent="onSend()"						paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5"/>		<!--		<mx:Form label="Simple Shared Object">			<mx:FormItem label="String Value:">				<s:TextInput text="@{sharedClass.str}" change="sendObject(event)"/>			</mx:FormItem>			<mx:FormItem label="Number Value:">				<s:NumericStepper value="@{sharedClass.num}" change="sendObject(event)"/>			</mx:FormItem>		</mx:Form>		-->		<!--		<s:TextArea id="output" width="100%" height="100%" text="{telnetClient.message}"					paddingLeft="5" paddingRight="5" selectable="true" editable="false"/>		<mx:LineChart id="chart" includeIn="admin"					  dataProvider="{memoryUsage}" 					  showDataTips="true">			<mx:horizontalAxis>				<mx:LinearAxis/>			</mx:horizontalAxis>						<mx:verticalAxis>				<mx:LinearAxis minimum="5000000" />			</mx:verticalAxis>			<mx:series>				<fx:Array>					<mx:LineSeries yField="memory"/>				</fx:Array>			</mx:series>		</mx:LineChart>				<s:HGroup width="100%" verticalAlign="middle" excludeFrom="chat" 				  paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5">				<s:Label text="User Name:"/>				<s:TextInput id="username" width="100%" keyDown="onLogin(event)"/>				<s:Button label="Connect" click="onConnect(event)"/>		</s:HGroup>		<s:HGroup width="100%" verticalAlign="middle" excludeFrom="login"				  paddingBottom="5" paddingLeft="5" paddingRight="5" paddingTop="5">			<s:Label text="Enter Text:"/>			<s:TextInput id="cmd" width="100%" keyDown="onKeyDown(event)"/>			<s:Button label="Send" click="onSend(event)"/>		</s:HGroup>		-->			<!--			<s:Button label="Stop" click="onStop(event)"/>			-->	</s:VGroup>			</s:Application>